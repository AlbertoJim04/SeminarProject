# -*- coding: utf-8 -*-
"""SupportVectorMachine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dgq5BzzLDLUcKnt81XLWfAWH2zKTctEO
"""

#Import libraries 
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn import metrics

#import our dataset
df = pd.read_csv('/content/drive/MyDrive/Seminar/D2.csv')
print(df)

#Define our Y , in this case is "clas" our diagnosis, and convert to int
Y = df["clas"].values 
#Y=Y.astype('int')

#Define our independent variables X, WHICH is all features except class
X = df.drop(labels = ["clas"], axis=1)  
print(X)

#Splitting the data set into the training and testing 
X_train, X_test, y_train, y_test = train_test_split(X,Y, test_size=0.20,random_state=30)

#Creating a SVM classifier
clf = svm.SVC(kernel='linear')

#Train the model using the traiing sets 
clf.fit(X_train,y_train)

#Predict the response for the datasets 
y_pred = clf.predict(X_test)

#Model Accuracy: How often is the classifier correct

print("Accuracy: ", metrics.accuracy_score(y_test,y_pred))

#Model Precision: What percentage positve tuples are labled as such
print("Precision: ",metrics.precision_score(y_test,y_pred))

#Model Recall: What percentage of positive tuples are labbled as such
print("Recall: ", metrics.recall_score(y_test, y_pred))